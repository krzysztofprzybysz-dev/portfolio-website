This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-06-04T07:21:42.401Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
.gitignore
package.json
postcss.config.js
public/index.html
README.md
src/App.js
src/components/About.js
src/components/Contact.js
src/components/Education.js
src/components/Experience.js
src/components/Footer.js
src/components/Home.js
src/components/Navigation.js
src/components/Projects.js
src/components/Skills.js
src/data/portfolioData.js
src/index.js
src/styles/animations.css
src/styles/globals.css

================================================================
Repository Files
================================================================

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

================
File: package.json
================
{
  "name": "vaporwave-portfolio-onepager",
  "version": "0.1.0",
  "private": true,
  "homepage": "https://krzysztofprzybysz-dev.github.io/portfolio-website",
  "dependencies": {
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^13.5.0",
    "lucide-react": "^0.511.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "predeploy": "npm run build",
    "deploy": "gh-pages -d build"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "autoprefixer": "^10.4.17",
    "gh-pages": "^6.3.0",
    "postcss": "^8.4.35",
    "tailwindcss": "^3.4.1"
  }
}

================
File: postcss.config.js
================
module.exports = {
    plugins: {
        tailwindcss: {},
        autoprefixer: {},
    },
}

================
File: public/index.html
================
<!DOCTYPE html>
<html lang="pl">
<head>
  <meta charset="utf-8" />
  <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="theme-color" content="#9333ea" />
  <meta
          name="description"
          content="Krzysztof Przybysz - Front-end Developer | Designer | Creator"
  />
  <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
  <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">

  <script src="https://cdn.tailwindcss.com"></script>
  <title>Krzysztof Przybysz - Portfolio</title>
</head>
<body>
<noscript>You need to enable JavaScript to run this app.</noscript>
<div id="root"></div>
</body>
</html>

================
File: README.md
================
# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)

================
File: src/App.js
================
import React, { useState, useEffect, useRef } from 'react';
import Navigation from './components/Navigation';
import Home from './components/Home';
import About from './components/About';
import Skills from './components/Skills';
import Projects from './components/Projects';
import Experience from './components/Experience';
import Education from './components/Education';
import Contact from './components/Contact';
import Footer from './components/Footer';

const App = () => {
    const [activeSection, setActiveSection] = useState('home');
    const sectionRefs = useRef({});

    useEffect(() => {
        const handleScroll = () => {
            const scrollPosition = window.scrollY + 100;

            Object.entries(sectionRefs.current).forEach(([section, ref]) => {
                if (ref && ref.offsetTop <= scrollPosition && ref.offsetTop + ref.offsetHeight > scrollPosition) {
                    setActiveSection(section);
                }
            });
        };

        window.addEventListener('scroll', handleScroll);
        return () => window.removeEventListener('scroll', handleScroll);
    }, []);

    const scrollToSection = (sectionId) => {
        sectionRefs.current[sectionId]?.scrollIntoView({ behavior: 'smooth' });
    };

    return (
        <div className="min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-indigo-900 text-white overflow-x-hidden">
            {/* Grid Overlay */}
            <div className="fixed inset-0 pointer-events-none opacity-20">
                <div className="absolute inset-0 grid-background"></div>
            </div>

            <Navigation activeSection={activeSection} scrollToSection={scrollToSection} />

            <Home ref={el => sectionRefs.current['home'] = el} />
            <About ref={el => sectionRefs.current['o-mnie'] = el} />
            <Skills ref={el => sectionRefs.current['umiejętności'] = el} />
            <Projects ref={el => sectionRefs.current['projekty'] = el} />
            <Experience ref={el => sectionRefs.current['doświadczenie'] = el} />
            <Education ref={el => sectionRefs.current['edukacja'] = el} />
            <Contact ref={el => sectionRefs.current['kontakt'] = el} />

            <Footer />
        </div>
    );
};

export default App;

================
File: src/components/About.js
================
import React, { forwardRef } from 'react';
import { Terminal, Palette, Code, Globe } from 'lucide-react';

const About = forwardRef((props, ref) => {
    return (
        <section ref={ref} id="o-mnie" className="min-h-screen py-20 px-6">
            <div className="container mx-auto max-w-4xl">
                <h2 className="text-5xl font-bold text-center mb-16 relative inline-block w-full">
          <span className="relative z-10 bg-gradient-to-r from-pink-400 to-cyan-400 text-transparent bg-clip-text">
            [ O Mnie ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-pink-500/30 glitch-header-1">
            [ O Mnie ]
          </span>
                </h2>
                <div className="bg-black/30 backdrop-blur-md rounded-2xl p-8 border border-cyan-500/30 shadow-2xl shadow-pink-500/20">
                    <p className="text-lg leading-relaxed mb-6 text-cyan-100">
                        Cześć! Jestem pasjonatem technologii front-end z miłością do tworzenia immersyjnych,
                        estetycznych doświadczeń cyfrowych. Specjalizuję się w łączeniu nostalgii retro z
                        nowoczesnymi technologiami webowymi.
                    </p>
                    <p className="text-lg leading-relaxed mb-6 text-cyan-100">
                        Moje projekty często czerpią inspirację z estetyki vaporwave, synthwave i retrofuturyzmu,
                        tworząc unikalne interfejsy, które nie tylko dobrze wyglądają, ale są też funkcjonalne
                        i wydajne.
                    </p>
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mt-8">
                        <div className="bg-gradient-to-br from-pink-500/20 to-purple-500/20 p-4 rounded-lg text-center">
                            <Terminal className="w-8 h-8 mx-auto mb-2 text-pink-400" />
                            <p className="text-sm">Clean Code</p>
                        </div>
                        <div className="bg-gradient-to-br from-cyan-500/20 to-blue-500/20 p-4 rounded-lg text-center">
                            <Palette className="w-8 h-8 mx-auto mb-2 text-cyan-400" />
                            <p className="text-sm">UI Design</p>
                        </div>
                        <div className="bg-gradient-to-br from-purple-500/20 to-pink-500/20 p-4 rounded-lg text-center">
                            <Code className="w-8 h-8 mx-auto mb-2 text-purple-400" />
                            <p className="text-sm">Development</p>
                        </div>
                        <div className="bg-gradient-to-br from-blue-500/20 to-cyan-500/20 p-4 rounded-lg text-center">
                            <Globe className="w-8 h-8 mx-auto mb-2 text-blue-400" />
                            <p className="text-sm">Innovation</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    );
});

About.displayName = 'About';

export default About;

================
File: src/components/Contact.js
================
import React, { forwardRef } from 'react';
import { Mail, Github, Linkedin } from 'lucide-react';

const Contact = forwardRef((props, ref) => {
    return (
        <section ref={ref} id="kontakt" className="min-h-screen py-20 px-6">
            <div className="container mx-auto max-w-4xl">
                <h2 className="text-5xl font-bold text-center mb-16 relative inline-block w-full">
          <span className="relative z-10 bg-gradient-to-r from-purple-400 to-pink-400 text-transparent bg-clip-text">
            [ Kontakt ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-purple-500/30 glitch-header-2">
            [ Kontakt ]
          </span>
                </h2>
                <div className="bg-black/30 backdrop-blur-md rounded-xl p-8 border border-cyan-500/30 text-center">
                    <p className="text-xl mb-8 text-cyan-300">Chętnie nawiążę współpracę!</p>
                    <div className="space-y-4">
                        <a
                            href="mailto:hello@example.com"
                            className="inline-flex items-center space-x-3 px-6 py-3 bg-gradient-to-r from-pink-500 to-purple-500 rounded-full hover:from-pink-600 hover:to-purple-600 transition-all duration-300 hover:scale-105"
                        >
                            <Mail className="w-5 h-5" />
                            <span>hello@example.com</span>
                        </a>
                        <div className="flex justify-center space-x-6 mt-8">
                            <a
                                href="https://github.com"
                                target="_blank"
                                rel="noopener noreferrer"
                                className="p-4 bg-pink-500/20 rounded-full hover:bg-pink-500/40 transition-all duration-300 hover:scale-110"
                            >
                                <Github className="w-8 h-8" />
                            </a>
                            <a
                                href="https://linkedin.com"
                                target="_blank"
                                rel="noopener noreferrer"
                                className="p-4 bg-cyan-500/20 rounded-full hover:bg-cyan-500/40 transition-all duration-300 hover:scale-110"
                            >
                                <Linkedin className="w-8 h-8" />
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    );
});

Contact.displayName = 'Contact';

export default Contact;

================
File: src/components/Education.js
================
import React, { forwardRef } from 'react';

const Education = forwardRef((props, ref) => {
    return (
        <section ref={ref} id="edukacja" className="min-h-screen py-20 px-6">
            <div className="container mx-auto max-w-4xl">
                <h2 className="text-5xl font-bold text-center mb-16 relative inline-block w-full">
          <span className="relative z-10 bg-gradient-to-r from-cyan-400 to-purple-400 text-transparent bg-clip-text">
            [ Edukacja ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-cyan-500/30 glitch-header-1">
            [ Edukacja ]
          </span>
                </h2>
                <div className="bg-black/30 backdrop-blur-md rounded-xl p-8 border border-purple-500/30">
                    <h3 className="text-2xl font-bold text-pink-300 mb-2">Informatyka</h3>
                    <p className="text-cyan-300 mb-4">Politechnika Warszawska</p>
                    <p className="text-purple-300">2016 - 2020</p>
                    <div className="mt-6 p-4 bg-gradient-to-r from-pink-500/10 to-cyan-500/10 rounded-lg">
                        <p className="text-gray-300">Specjalizacja: Systemy Webowe i Aplikacje Mobilne</p>
                    </div>
                </div>
            </div>
        </section>
    );
});

Education.displayName = 'Education';

export default Education;

================
File: src/components/Experience.js
================
import React, { forwardRef } from 'react';

const Experience = forwardRef((props, ref) => {
    return (
        <section ref={ref} id="doświadczenie" className="min-h-screen py-20 px-6">
            <div className="container mx-auto max-w-4xl">
                <h2 className="text-5xl font-bold text-center mb-16 relative inline-block w-full">
          <span className="relative z-10 bg-gradient-to-r from-pink-400 to-purple-400 text-transparent bg-clip-text">
            [ Doświadczenie ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-pink-500/30 glitch-header-2">
            [ Doświadczenie ]
          </span>
                </h2>
                <div className="space-y-8">
                    <div className="bg-black/30 backdrop-blur-md rounded-xl p-8 border-l-4 border-pink-500 hover:border-cyan-500 transition-all duration-300">
                        <div className="flex justify-between items-start mb-4">
                            <div>
                                <h3 className="text-2xl font-bold text-cyan-300">Senior Front-end Developer</h3>
                                <p className="text-purple-300">Firma XYZ</p>
                            </div>
                            <span className="px-4 py-2 bg-pink-500/20 rounded-full text-pink-300">2023 - Obecnie</span>
                        </div>
                        <ul className="space-y-2 text-gray-300">
                            <li>• Rozwój aplikacji internetowych z wykorzystaniem React</li>
                            <li>• Implementacja animacji i interakcji</li>
                            <li>• Optymalizacja wydajności</li>
                        </ul>
                    </div>

                    <div className="bg-black/30 backdrop-blur-md rounded-xl p-8 border-l-4 border-cyan-500">
                        <div className="flex justify-between items-start mb-4">
                            <div>
                                <h3 className="text-2xl font-bold text-pink-300">Front-end Developer</h3>
                                <p className="text-cyan-300">Firma ABC</p>
                            </div>
                            <span className="px-4 py-2 bg-cyan-500/20 rounded-full text-cyan-300">2020 - 2023</span>
                        </div>
                        <ul className="space-y-2 text-gray-300">
                            <li>• Tworzenie responsywnych interfejsów</li>
                            <li>• Współpraca z UX designerami</li>
                            <li>• Integracja z API</li>
                        </ul>
                    </div>
                </div>
            </div>
        </section>
    );
});

Experience.displayName = 'Experience';

export default Experience;

================
File: src/components/Footer.js
================
import React from 'react';

const Footer = () => {
    return (
        <footer className="py-8 text-center border-t border-purple-500/30">
            <p className="text-cyan-300">© 2025 Krzysztof Przybysz • Stworzono z ♥ w estetyce vaporwave</p>
        </footer>
    );
};

export default Footer;

================
File: src/components/Home.js
================
import React, { forwardRef } from 'react';
import { ChevronDown, Mail, Github, Linkedin } from 'lucide-react';

const Home = forwardRef((props, ref) => {
    const glitchText = 'Krzysztof Przybysz';

    return (
        <section ref={ref} id="home" className="min-h-screen flex items-center justify-center relative">
            <div className="text-center z-10">
                <h1 className="text-6xl md:text-8xl font-bold mb-6 relative inline-block">
          <span className="relative z-10 bg-gradient-to-r from-pink-400 via-purple-400 to-cyan-400 text-transparent bg-clip-text">
            {glitchText}
          </span>
                    <span className="absolute inset-0 text-pink-500 opacity-50 glitch-1">
            {glitchText}
          </span>
                    <span className="absolute inset-0 text-cyan-500 opacity-50 glitch-2">
            {glitchText}
          </span>
                </h1>
                <p className="text-2xl md:text-3xl text-cyan-300 mb-8 font-mono">
                    Front-end Developer | Designer | Creator
                </p>
                <div className="flex justify-center space-x-4 mb-12">
                    <a
                        href="https://github.com"
                        target="_blank"
                        rel="noopener noreferrer"
                        className="p-3 bg-pink-500/20 rounded-full hover:bg-pink-500/40 transition-all duration-300 hover:scale-110"
                    >
                        <Github className="w-6 h-6" />
                    </a>
                    <a
                        href="https://linkedin.com"
                        target="_blank"
                        rel="noopener noreferrer"
                        className="p-3 bg-cyan-500/20 rounded-full hover:bg-cyan-500/40 transition-all duration-300 hover:scale-110"
                    >
                        <Linkedin className="w-6 h-6" />
                    </a>
                    <a
                        href="mailto:hello@example.com"
                        className="p-3 bg-purple-500/20 rounded-full hover:bg-purple-500/40 transition-all duration-300 hover:scale-110"
                    >
                        <Mail className="w-6 h-6" />
                    </a>
                </div>
                <ChevronDown className="w-8 h-8 mx-auto animate-bounce text-cyan-400" />
            </div>

            {/* Animated Background Elements */}
            <div className="absolute inset-0 overflow-hidden">
                <div className="absolute top-20 left-10 w-72 h-72 bg-pink-500/20 rounded-full blur-3xl animate-pulse"></div>
                <div className="absolute bottom-20 right-10 w-96 h-96 bg-cyan-500/20 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '1s' }}></div>
                <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-80 h-80 bg-purple-500/20 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '2s' }}></div>
            </div>
        </section>
    );
});

Home.displayName = 'Home';

export default Home;

================
File: src/components/Navigation.js
================
import React, { useState } from 'react';

const Navigation = ({ activeSection, scrollToSection }) => {
    const sections = ['home', 'o-mnie', 'umiejętności', 'projekty', 'doświadczenie', 'edukacja', 'kontakt'];
    const [menuOpen, setMenuOpen] = useState(false);

    return (
        <nav className="fixed top-0 w-full z-50 backdrop-blur-md bg-black/20 border-b border-cyan-500/30">
            <div className="container mx-auto px-4 py-4">
                {/* Mobile menu button */}
                <div className="md:hidden flex justify-center">
                    <button
                        onClick={() => setMenuOpen(!menuOpen)}
                        className="text-cyan-300 px-4 py-2 rounded-full border border-cyan-500/30"
                    >
                        Menu {menuOpen ? '▲' : '▼'}
                    </button>
                </div>

                {/* Desktop menu */}
                <ul className="hidden md:flex justify-center flex-wrap gap-2">
                    {sections.map((section) => (
                        <li key={section}>
                            <button
                                onClick={() => scrollToSection(section)}
                                className={`px-3 py-2 rounded-full transition-all duration-300 ${
                                    activeSection === section
                                        ? 'bg-gradient-to-r from-pink-500 to-cyan-500 text-white shadow-lg shadow-pink-500/50'
                                        : 'text-cyan-300 hover:text-white hover:bg-white/10'
                                }`}
                            >
                                {section.charAt(0).toUpperCase() + section.slice(1).replace('-', ' ')}
                            </button>
                        </li>
                    ))}
                </ul>

                {/* Mobile menu dropdown */}
                {menuOpen && (
                    <ul className="md:hidden flex flex-col items-center gap-2 mt-2">
                        {sections.map((section) => (
                            <li key={section} className="w-full">
                                <button
                                    onClick={() => {
                                        scrollToSection(section);
                                        setMenuOpen(false);
                                    }}
                                    className={`w-full px-3 py-2 rounded-full transition-all duration-300 ${
                                        activeSection === section
                                            ? 'bg-gradient-to-r from-pink-500 to-cyan-500 text-white shadow-lg shadow-pink-500/50'
                                            : 'text-cyan-300 hover:text-white hover:bg-white/10'
                                    }`}
                                >
                                    {section.charAt(0).toUpperCase() + section.slice(1).replace('-', ' ')}
                                </button>
                            </li>
                        ))}
                    </ul>
                )}
            </div>
        </nav>
    );
};

export default Navigation;

================
File: src/components/Projects.js
================
import React, { forwardRef } from 'react';
import { projects } from '../data/portfolioData';

const Projects = forwardRef((props, ref) => {
    return (
        <section ref={ref} id="projekty" className="min-h-screen py-20 px-6">
            <div className="container mx-auto max-w-6xl">
                <h2 className="text-5xl font-bold text-center mb-16 relative inline-block w-full">
          <span className="relative z-10 bg-gradient-to-r from-purple-400 to-cyan-400 text-transparent bg-clip-text">
            [ Projekty ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-purple-500/30 glitch-header-1">
            [ Projekty ]
          </span>
                </h2>
                <div className="grid md:grid-cols-3 gap-6">
                    {projects.map((project, index) => (
                        <div
                            key={index}
                            className="bg-black/30 backdrop-blur-md rounded-xl p-6 border border-pink-500/30 hover:border-cyan-500/50 transition-all duration-300 hover:transform hover:scale-105 hover:shadow-2xl hover:shadow-pink-500/30"
                        >
                            <h3 className="text-2xl font-bold mb-3 text-cyan-300">{project.title}</h3>
                            <p className="text-gray-300 mb-4">{project.description}</p>
                            <div className="flex flex-wrap gap-2 mb-6">
                                {project.tech.map((tech) => (
                                    <span key={tech} className="px-3 py-1 bg-purple-500/20 rounded-full text-sm text-purple-300">
                    {tech}
                  </span>
                                ))}
                            </div>
                            <div className="flex space-x-4">
                                <a
                                    href={project.demo}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    className="flex-1 text-center py-2 bg-gradient-to-r from-pink-500 to-purple-500 rounded-lg hover:from-pink-600 hover:to-purple-600 transition-all duration-300"
                                >
                                    Demo
                                </a>
                                <a
                                    href={project.code}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    className="flex-1 text-center py-2 bg-gradient-to-r from-cyan-500 to-blue-500 rounded-lg hover:from-cyan-600 hover:to-blue-600 transition-all duration-300"
                                >
                                    Kod
                                </a>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </section>
    );
});

Projects.displayName = 'Projects';

export default Projects;

================
File: src/components/Skills.js
================
import React, { forwardRef } from 'react';
import { skills } from '../data/portfolioData';
import * as LucideIcons from 'lucide-react';

const Skills = forwardRef((props, ref) => {
    return (
        <section ref={ref} id="umiejętności" className="min-h-screen py-20 px-6">
            <div className="container mx-auto max-w-4xl">
                <h2 className="text-5xl font-bold text-center mb-16 relative inline-block w-full">
          <span className="relative z-10 bg-gradient-to-r from-cyan-400 to-pink-400 text-transparent bg-clip-text">
            [ Umiejętności ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-cyan-500/30 glitch-header-2">
            [ Umiejętności ]
          </span>
                </h2>
                <div className="space-y-6">
                    {skills.map((skill, index) => {
                        const Icon = LucideIcons[skill.icon];
                        return (
                            <div key={skill.name} className="bg-black/30 backdrop-blur-md rounded-lg p-6 border border-purple-500/30">
                                <div className="flex justify-between mb-2 items-center">
                                    <div className="flex items-center gap-2">
                                        {Icon && <Icon className="text-cyan-300 w-5 h-5" />}
                                        <span className="text-lg font-mono text-cyan-300">{skill.name}</span>
                                    </div>
                                    <span className="text-pink-400">{skill.level}%</span>
                                </div>
                                <div className="w-full bg-black/50 rounded-full h-4 overflow-hidden">
                                    <div
                                        className="h-full bg-gradient-to-r from-pink-500 to-cyan-500 rounded-full transition-all duration-1000 ease-out skill-bar"
                                        style={{
                                            width: `${skill.level}%`,
                                            animationDelay: `${index * 0.1}s`
                                        }}
                                    ></div>
                                </div>
                            </div>
                        );
                    })}
                </div>
            </div>
        </section>
    );
});

Skills.displayName = 'Skills';

export default Skills;

================
File: src/data/portfolioData.js
================
export const skills = [
    { name: "JavaScript", level: 90, icon: "Code" },
    { name: "React", level: 85, icon: "Atom" },
    { name: "Node.js", level: 80, icon: "Server" },
    { name: "UI/UX", level: 85, icon: "Layout" },
    { name: "Three.js", level: 70, icon: "Box" }
];

export const projects = [
    {
        title: "Synthwave Dashboard",
        description: "Futurystyczny dashboard z animacjami React i Three.js",
        tech: ["React", "Three.js", "Tailwind"],
        demo: "https://example.com/demo1",
        code: "https://github.com/yourusername/project1"
    },
    {
        title: "Retro Chat App",
        description: "Aplikacja czatu w stylu Windows 95 z WebSockets",
        tech: ["Node.js", "Socket.io", "CSS3"],
        demo: "https://example.com/demo2",
        code: "https://github.com/yourusername/project2"
    },
    {
        title: "Vaporwave Music Player",
        description: "Odtwarzacz muzyki z wizualizacjami audio",
        tech: ["JavaScript", "Web Audio API", "Canvas"],
        demo: "https://example.com/demo3",
        code: "https://github.com/yourusername/project3"
    }
];

================
File: src/index.js
================
import React from 'react';
import ReactDOM from 'react-dom/client';
import './styles/globals.css';
import './styles/animations.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
    <React.StrictMode>
        <App />
    </React.StrictMode>
);

================
File: src/styles/animations.css
================
/* Glitch Animations */
.glitch-1 {
    animation: glitch 2s infinite;
    clip-path: inset(0 0 0 0);
}

.glitch-2 {
    animation: glitch2 2.5s infinite;
    clip-path: inset(0 0 0 0);
}

@keyframes glitch {
    0%, 100% {
        transform: translate(0);
        clip-path: inset(0 0 0 0);
    }
    20% {
        transform: translate(-2px, 2px);
        clip-path: inset(20% 0 30% 0);
    }
    40% {
        transform: translate(-2px, -2px);
        clip-path: inset(50% 0 20% 0);
    }
    60% {
        transform: translate(2px, 2px);
        clip-path: inset(10% 0 60% 0);
    }
    80% {
        transform: translate(2px, -2px);
        clip-path: inset(40% 0 10% 0);
    }
}

@keyframes glitch2 {
    0%, 100% {
        transform: translate(0);
        clip-path: inset(0 0 0 0);
    }
    20% {
        transform: translate(2px, -2px);
        clip-path: inset(60% 0 10% 0);
    }
    40% {
        transform: translate(-2px, 2px);
        clip-path: inset(20% 0 50% 0);
    }
    60% {
        transform: translate(2px, 2px);
        clip-path: inset(30% 0 40% 0);
    }
    80% {
        transform: translate(-2px, -2px);
        clip-path: inset(10% 0 70% 0);
    }
}

/* Header Glitch Animations */
.glitch-header-1 {
    animation: glitchHeader 3s infinite;
    top: 0;
    left: 50%;
    position: absolute;
    transform: translateX(-50%);
    width: 100%;
    text-align: center;
}

.glitch-header-2 {
    animation: glitchHeader2 2.5s infinite;
    top: 0;
    left: 50%;
    position: absolute;
    transform: translateX(-50%);
    width: 100%;
    text-align: center;
}

@keyframes glitchHeader {
    0%, 100% {
        transform: translateX(-50%);
        opacity: 0.3;
    }
    10% {
        transform: translateX(-50%) skew(-5deg);
        opacity: 0.5;
    }
    20% {
        transform: translateX(-50%);
        opacity: 0.3;
    }
    30% {
        transform: translateX(-50%) skew(5deg);
        opacity: 0.5;
    }
    40% {
        transform: translateX(-50%);
        opacity: 0.3;
    }
    50% {
        transform: translateX(-50%) scaleX(1.1);
        opacity: 0.6;
    }
    60% {
        transform: translateX(-50%);
        opacity: 0.3;
    }
    70% {
        transform: translateX(-50%) skew(-3deg);
        opacity: 0.5;
    }
    80% {
        transform: translateX(-50%);
        opacity: 0.3;
    }
    90% {
        transform: translateX(-50%) scaleY(1.05);
        opacity: 0.4;
    }
}

@keyframes glitchHeader2 {
    0%, 100% {
        transform: translateX(-50%) translateY(0);
        opacity: 0.3;
    }
    15% {
        transform: translateX(-50%) translateY(-2px);
        opacity: 0.5;
    }
    30% {
        transform: translateX(-50%) translateY(1px);
        opacity: 0.4;
    }
    45% {
        transform: translateX(-50%) translateY(-1px) skew(2deg);
        opacity: 0.6;
    }
    60% {
        transform: translateX(-50%) translateY(2px);
        opacity: 0.3;
    }
    75% {
        transform: translateX(-50%) translateY(-2px) skew(-2deg);
        opacity: 0.5;
    }
}

/* Responsive styles for glitch effect */
@media (max-width: 768px) {
    .glitch-header-1,
    .glitch-header-2 {
        width: 100%;
        text-align: center;
    }
}

/* Skill Bar Animation */
.skill-bar {
    animation: slideIn 1s ease-out both;
}

@keyframes slideIn {
    from { width: 0; }
    to { width: var(--width); }
}

================
File: src/styles/globals.css
================
@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    overflow-x: hidden;
    background-color: black;
    color: white;
}

.grid-background {
    background-image:
            linear-gradient(rgba(1, 205, 254, 0.3) 1px, transparent 1px),
            linear-gradient(90deg, rgba(1, 205, 254, 0.3) 1px, transparent 1px);
    background-size: 50px 50px;
}

/* Vaporwave styling */
@layer components {
    .vaporwave-text {
        font-family: 'Press Start 2P', cursive;
        color: transparent;
        background-clip: text;
        background-image: linear-gradient(to right, #ff71ce, #b967ff, #01cdfe);
        text-shadow: 0 0 5px rgba(255, 113, 206, 0.5), 0 0 10px rgba(1, 205, 254, 0.5);
    }

    .neon-border {
        border: 1px solid #01cdfe;
        box-shadow: 0 0 5px #01cdfe, 0 0 10px rgba(1, 205, 254, 0.8);
    }

    .neon-glow {
        text-shadow: 0 0 5px currentColor, 0 0 10px currentColor;
    }

    .retro-card {
        background-color: rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(8px);
        border-radius: 0.5rem;
        padding: 1.5rem;
        border: 1px solid rgba(185, 103, 255, 0.3);
        transition: all 0.3s ease;
    }

    .retro-card:hover {
        border-color: #01cdfe;
        box-shadow: 0 0 15px rgba(1, 205, 254, 0.5);
        transform: translateY(-5px);
    }
}

.skill-bar {
    animation: skillAnimation 1.5s ease-out forwards;
    transform-origin: left;
    transform: scaleX(0);
}

@keyframes skillAnimation {
    from {
        transform: scaleX(0);
    }
    to {
        transform: scaleX(1);
    }
}

/* Media queries for responsive headers */
@media (max-width: 768px) {
    h2.text-5xl {
        font-size: 1.75rem !important;
        line-height: 2rem !important;
        word-break: break-word;
        hyphens: auto;
    }

    section {
        padding-top: 7rem !important;
    }
}
