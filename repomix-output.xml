This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.gitignore
package.json
postcss.config.js
public/index.html
README.md
src/App.js
src/components/About.js
src/components/Contact.js
src/components/Education.js
src/components/Experience.js
src/components/Footer.js
src/components/Home.js
src/components/Navigation.js
src/components/Projects.js
src/components/Skills.js
src/components/TypewriterEffect.js
src/data/portfolioData.js
src/index.js
src/styles/animations.css
src/styles/globals.css
src/styles/scrollAnimations.css
src/utils/scrollAnimations.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".gitignore">
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*
</file>

<file path="postcss.config.js">
module.exports = {
    plugins: {
        tailwindcss: {},
        autoprefixer: {},
    },
}
</file>

<file path="README.md">
# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)
</file>

<file path="src/components/TypewriterEffect.js">
import React, { useState, useEffect, useRef } from 'react';

const TypewriterEffect = ({ phrases, typingSpeed = 100, deletingSpeed = 50, pauseTime = 2000 }) => {
  const [displayText, setDisplayText] = useState('');
  const [index, setIndex] = useState(0);
  const [isTyping, setIsTyping] = useState(true);
  const phraseIndex = useRef(0);
  const timer = useRef(null);

  // Cleanup function to clear timers
  useEffect(() => {
    return () => {
      if (timer.current) clearTimeout(timer.current);
    };
  }, []);

  // Main typing effect logic
  useEffect(() => {
    // Validate phrases array
    if (!phrases || phrases.length === 0) return;

    const currentPhrase = phrases[phraseIndex.current];

    // Clear any existing timeout
    if (timer.current) clearTimeout(timer.current);

    // Typing logic
    if (isTyping) {
      // If we've completed typing the current phrase
      if (index >= currentPhrase.length) {
        // Pause before starting to delete
        timer.current = setTimeout(() => {
          setIsTyping(false);
        }, pauseTime);
        return;
      }

      // Type next character
      timer.current = setTimeout(() => {
        setDisplayText(currentPhrase.substring(0, index + 1));
        setIndex(index + 1);
      }, typingSpeed);
    }
    // Deleting logic
    else {
      if (index <= 0) {
        // Move to the next phrase
        phraseIndex.current = (phraseIndex.current + 1) % phrases.length;
        setIsTyping(true);
        return;
      }

      // Delete a character
      timer.current = setTimeout(() => {
        setDisplayText(currentPhrase.substring(0, index - 1));
        setIndex(index - 1);
      }, deletingSpeed);
    }
  }, [index, isTyping, phrases, typingSpeed, deletingSpeed, pauseTime]);

  return (
    <span className="text-indigo-300 font-semibold inline">
      {displayText}
      <span className="inline-block w-0.5 h-5 bg-cyan-400 ml-1 align-middle animate-[blink_1s_infinite]"></span>
    </span>
  );
};

export default TypewriterEffect;
</file>

<file path="src/styles/scrollAnimations.css">
/* Scroll Animations - Vaporwave Style */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes glowPulse {
  0% {
    text-shadow: 0 0 5px rgba(255, 113, 206, 0.5), 0 0 10px rgba(1, 205, 254, 0.5);
    box-shadow: 0 0 5px rgba(255, 113, 206, 0.3), 0 0 10px rgba(1, 205, 254, 0.3);
  }
  50% {
    text-shadow: 0 0 15px rgba(255, 113, 206, 0.8), 0 0 20px rgba(1, 205, 254, 0.8);
    box-shadow: 0 0 15px rgba(255, 113, 206, 0.6), 0 0 20px rgba(1, 205, 254, 0.6);
  }
  100% {
    text-shadow: 0 0 5px rgba(255, 113, 206, 0.5), 0 0 10px rgba(1, 205, 254, 0.5);
    box-shadow: 0 0 5px rgba(255, 113, 206, 0.3), 0 0 10px rgba(1, 205, 254, 0.3);
  }
}

@keyframes scanline {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

@keyframes gridMove {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 50px 50px;
  }
}

/* Scroll-triggered animation classes */
.scroll-animate {
  opacity: 0;
  transition: all 0.8s ease-out;
}

.fade-in-up {
  animation: fadeInUp 0.8s forwards;
}

.fade-in-left {
  animation: fadeInLeft 0.8s forwards;
}

.fade-in-right {
  animation: fadeInRight 0.8s forwards;
}

.glow-on-scroll {
  animation: glowPulse 2s infinite;
}

.vaporwave-section {
  position: relative;
  overflow: hidden;
  transition: all 0.4s ease-out;
}

.vaporwave-section.active-section {
  border-color: rgba(1, 205, 254, 0.8);
}

.vaporwave-section::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 5px;
  background: linear-gradient(90deg, rgba(255, 113, 206, 0), rgba(255, 113, 206, 0.8), rgba(1, 205, 254, 0.8), rgba(255, 113, 206, 0));
  opacity: 0;
  animation: scanline 4s linear infinite;
  pointer-events: none;
  z-index: 10;
  transition: opacity 0.3s ease;
}

.vaporwave-section.active-section::after {
  opacity: 0.7;
}

.grid-animate {
  animation: gridMove 10s linear infinite;
}

/* Klasy dla opóźnień */
.delay-100 {
  animation-delay: 100ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}

.delay-400 {
  animation-delay: 400ms;
}

/* Dodatkowe efekty vaporwave dla elementów w widoku */
.vaporwave-card {
  transition: all 0.3s ease;
}

.vaporwave-card:hover,
.active-section .vaporwave-card {
  box-shadow: 0 0 15px rgba(1, 205, 254, 0.5), 0 0 25px rgba(185, 103, 255, 0.3);
  transform: translateY(-5px);
}

/* Efekt CRT dla sekcji */
.crt-effect {
  position: relative;
  overflow: hidden;
}

.crt-effect::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    rgba(0, 0, 0, 0.1),
    rgba(0, 0, 0, 0.1) 1px,
    transparent 1px,
    transparent 2px
  );
  pointer-events: none;
  opacity: 0.3;
  z-index: 1;
}

/* Efekt migotania dla nagłówków */
.flicker-text {
  animation: textFlicker 3s infinite alternate;
}

@keyframes textFlicker {
  0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {
    opacity: 1;
    text-shadow: 0 0 5px rgba(255, 113, 206, 0.5), 0 0 10px rgba(1, 205, 254, 0.5);
  }
  20%, 24%, 55% {
    opacity: 0.5;
    text-shadow: none;
  }
}
</file>

<file path="src/utils/scrollAnimations.js">
// Obsługa animacji przewijania w stylu vaporwave
document.addEventListener('DOMContentLoaded', () => {
  const animatedElements = document.querySelectorAll('.scroll-animate');

  // Funkcja sprawdzająca czy element jest widoczny w oknie przeglądarki
  const isElementInViewport = (el) => {
    const rect = el.getBoundingClientRect();
    const windowHeight = window.innerHeight || document.documentElement.clientHeight;
    // Element jest widoczny, gdy jego górna krawędź jest poniżej górnej krawędzi okna
    // i dolna krawędź jest powyżej dolnej krawędzi okna
    const topVisible = rect.top <= windowHeight * 0.75;
    const bottomVisible = rect.bottom >= 0;

    return topVisible && bottomVisible;
  };

  // Funkcja aktualizująca animacje na podstawie scrollowania
  const handleScroll = () => {
    animatedElements.forEach((el) => {
      if (isElementInViewport(el) && !el.classList.contains('animated')) {
        // Dodajemy odpowiednią klasę animacji
        if (el.classList.contains('animate-up')) {
          el.classList.add('fade-in-up');
        } else if (el.classList.contains('animate-left')) {
          el.classList.add('fade-in-left');
        } else if (el.classList.contains('animate-right')) {
          el.classList.add('fade-in-right');
        }

        // Dodajemy klasę oznaczającą, że element został już zanimowany
        el.classList.add('animated');
      }
    });

    // Aktywujemy efekt neonowy dla sekcji w viewport
    const sections = document.querySelectorAll('.vaporwave-section');
    sections.forEach((section) => {
      if (isElementInViewport(section)) {
        section.classList.add('active-section');
      } else {
        section.classList.remove('active-section');
      }
    });
  };

  // Nasłuchiwanie zdarzenia scroll
  window.addEventListener('scroll', handleScroll);

  // Wywołanie handleScroll na początku, aby sprawdzić elementy już widoczne
  handleScroll();
});
</file>

<file path="public/index.html">
<!DOCTYPE html>
<html lang="pl">
<head>
  <meta charset="utf-8" />
  <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="theme-color" content="#9333ea" />
  <meta
          name="description"
          content="Krzysztof Przybysz - Front-end Developer | Designer | Creator"
  />
  <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
  <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">

  <script src="https://cdn.tailwindcss.com"></script>
  <title>Krzysztof Przybysz - Portfolio</title>
</head>
<body>
<noscript>You need to enable JavaScript to run this app.</noscript>
<div id="root"></div>
</body>
</html>
</file>

<file path="src/data/portfolioData.js">
export const skills = [
    { name: "JavaScript", level: 90, icon: "Code" },
    { name: "React", level: 85, icon: "Atom" },
    { name: "Node.js", level: 80, icon: "Server" },
    { name: "UI/UX", level: 85, icon: "Layout" },
    { name: "Three.js", level: 70, icon: "Box" }
];

export const projects = [
    {
        title: "Synthwave Dashboard",
        description: "Futuristic dashboard with React and Three.js animations",
        tech: ["React", "Three.js", "Tailwind"],
        demo: "https://example.com/demo1",
        code: "https://github.com/yourusername/project1"
    },
    {
        title: "Retro Chat App",
        description: "Windows 95 style chat application with WebSockets",
        tech: ["Node.js", "Socket.io", "CSS3"],
        demo: "https://example.com/demo2",
        code: "https://github.com/yourusername/project2"
    },
    {
        title: "Vaporwave Music Player",
        description: "Music player with audio visualizations",
        tech: ["JavaScript", "Web Audio API", "Canvas"],
        demo: "https://example.com/demo3",
        code: "https://github.com/yourusername/project3"
    }
];
</file>

<file path="src/components/Footer.js">
import React from 'react';
import packageInfo from '../../package.json';

const Footer = () => {
    return (
        <footer className="py-8 text-center border-t border-purple-500/30 vaporwave-section">
            <p className="text-cyan-300">© 2025 Krzysztof Przybysz • Wersja: {packageInfo.version}</p>
        </footer>
    );
};

export default Footer;
</file>

<file path="src/components/Navigation.js">
import React, { useState } from 'react';

const Navigation = ({ activeSection, scrollToSection }) => {
    const sections = ['home', 'about', 'skills', 'projects', 'experience', 'education', 'contact'];
    const [menuOpen, setMenuOpen] = useState(false);

    return (
        <nav className="fixed top-0 w-full z-50 backdrop-blur-md bg-black/20 border-b border-cyan-500/30">
            <div className="container mx-auto px-4 py-4">
                {/* Mobile menu button */}
                <div className="md:hidden flex justify-center">
                    <button
                        onClick={() => setMenuOpen(!menuOpen)}
                        className="text-cyan-300 px-4 py-2 rounded-full border border-cyan-500/30"
                    >
                        Menu {menuOpen ? '▲' : '▼'}
                    </button>
                </div>

                {/* Desktop menu */}
                <ul className="hidden md:flex justify-center flex-wrap gap-2">
                    {sections.map((section) => (
                        <li key={section}>
                            <button
                                onClick={() => scrollToSection(section)}
                                className={`px-3 py-2 rounded-full transition-all duration-300 ${
                                    activeSection === section
                                        ? 'bg-gradient-to-r from-pink-500 to-cyan-500 text-white shadow-lg shadow-pink-500/50'
                                        : 'text-cyan-300 hover:text-white hover:bg-white/10'
                                }`}
                            >
                                {section.charAt(0).toUpperCase() + section.slice(1).replace('-', ' ')}
                            </button>
                        </li>
                    ))}
                </ul>

                {/* Mobile menu dropdown */}
                {menuOpen && (
                    <ul className="md:hidden flex flex-col items-center gap-2 mt-2">
                        {sections.map((section) => (
                            <li key={section} className="w-full">
                                <button
                                    onClick={() => {
                                        scrollToSection(section);
                                        setMenuOpen(false);
                                    }}
                                    className={`w-full px-3 py-2 rounded-full transition-all duration-300 ${
                                        activeSection === section
                                            ? 'bg-gradient-to-r from-pink-500 to-cyan-500 text-white shadow-lg shadow-pink-500/50'
                                            : 'text-cyan-300 hover:text-white hover:bg-white/10'
                                    }`}
                                >
                                    {section.charAt(0).toUpperCase() + section.slice(1).replace('-', ' ')}
                                </button>
                            </li>
                        ))}
                    </ul>
                )}
            </div>
        </nav>
    );
};

export default Navigation;
</file>

<file path="src/index.js">
import React from 'react';
import ReactDOM from 'react-dom/client';
import './styles/globals.css';
import './styles/animations.css';
import './styles/scrollAnimations.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
    <React.StrictMode>
        <App />
    </React.StrictMode>
);
</file>

<file path="src/styles/globals.css">
@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    overflow-x: hidden;
    background-color: black;
    color: white;
}

.grid-background {
    background-image:
            linear-gradient(rgba(1, 205, 254, 0.3) 1px, transparent 1px),
            linear-gradient(90deg, rgba(1, 205, 254, 0.3) 1px, transparent 1px);
    background-size: 50px 50px;
}

/* Vaporwave styling */
@layer components {
    .vaporwave-text {
        font-family: 'Press Start 2P', cursive;
        color: transparent;
        background-clip: text;
        background-image: linear-gradient(to right, #ff71ce, #b967ff, #01cdfe);
    }

    .glow-text {
        text-shadow: 0 0 5px rgba(255, 140, 205, 0.5),
                     0 0 10px rgba(1, 205, 254, 0.5),
                     0 0 20px rgba(185, 103, 255, 0.3);
        position: relative;
        z-index: 2;
    }

    .neon-border {
        border: 1px solid #01cdfe;
        box-shadow: 0 0 5px #01cdfe, 0 0 10px rgba(1, 205, 254, 0.8);
    }

    .neon-glow {
        text-shadow: 0 0 5px currentColor, 0 0 10px currentColor;
    }

    .retro-card {
        background-color: rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(8px);
        border-radius: 0.5rem;
        padding: 1.5rem;
        border: 1px solid rgba(185, 103, 255, 0.3);
        transition: all 0.3s ease;
    }

    .retro-card:hover {
        border-color: #01cdfe;
        box-shadow: 0 0 15px rgba(1, 205, 254, 0.5);
        transform: translateY(-5px);
    }
}

.skill-bar {
    animation: skillAnimation 1.5s ease-out forwards;
    transform-origin: left;
    transform: scaleX(0);
}

@keyframes skillAnimation {
    from {
        transform: scaleX(0);
    }
    to {
        transform: scaleX(1);
    }
}

/* Media queries for responsive headers */
@media (max-width: 768px) {
    h2.text-5xl {
        font-size: 1.75rem !important;
        line-height: 2rem !important;
        word-break: break-word;
        hyphens: auto;
    }

    section {
        padding-top: 7rem !important;
    }
}
</file>

<file path="package.json">
{
  "name": "vaporwave-portfolio-onepager",
  "version": "0.2.0",
  "private": true,
  "homepage": "https://krzysztofprzybysz-dev.github.io/portfolio-website",
  "dependencies": {
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^13.5.0",
    "lucide-react": "^0.511.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "predeploy": "npm run build",
    "deploy": "gh-pages -d build"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "autoprefixer": "^10.4.17",
    "gh-pages": "^6.3.0",
    "postcss": "^8.4.35",
    "tailwindcss": "^3.4.1"
  }
}
</file>

<file path="src/components/Contact.js">
import React, { forwardRef } from 'react';
// Bezpośredni import konkretnych ikon
import { Mail, Github, Linkedin } from 'lucide-react';

const Contact = forwardRef((props, ref) => {
    // Zdefiniowanie ikon lokalnie
    const MailIcon = Mail;
    const GithubIcon = Github;
    const LinkedinIcon = Linkedin;

    return (
        <section ref={ref} id="contact" className="py-12 px-6 vaporwave-section">
            <div className="container mx-auto max-w-4xl">
                <h2 className="text-5xl font-bold text-center mb-12 relative inline-block w-full scroll-animate animate-up">
          <span className="relative z-10 bg-gradient-to-r from-purple-400 to-pink-400 text-transparent bg-clip-text">
            [ Contact ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-purple-500/30 glitch-header-2">
            [ Contact ]
          </span>
                </h2>
                <div className="bg-black/30 backdrop-blur-md rounded-xl p-8 border border-cyan-500/30 text-center mb-12">
                    <p className="text-xl mb-8 text-cyan-300 scroll-animate animate-right">I'm open to collaboration!</p>
                    <div className="space-y-4">
                        <a
                            href="mailto:hello@example.com"
                            className="inline-flex items-center space-x-3 px-6 py-3 bg-gradient-to-r from-pink-500 to-purple-500 rounded-full hover:from-pink-600 hover:to-purple-600 transition-all duration-300 hover:scale-105 scroll-animate animate-up"
                        >
                            <MailIcon className="w-5 h-5 text-white" stroke="currentColor" strokeWidth={2} fill="none" />
                            <span>hello@example.com</span>
                        </a>
                        <div className="flex justify-center space-x-6 mt-8 scroll-animate animate-up">
                            <a
                                href="https://github.com"
                                target="_blank"
                                rel="noopener noreferrer"
                                className="p-4 bg-pink-500/20 rounded-full hover:bg-pink-500/40 transition-all duration-300 hover:scale-110"
                            >
                                <GithubIcon className="w-8 h-8 text-white" stroke="currentColor" strokeWidth={2} fill="none" />
                            </a>
                            <a
                                href="https://linkedin.com"
                                target="_blank"
                                rel="noopener noreferrer"
                                className="p-4 bg-cyan-500/20 rounded-full hover:bg-cyan-500/40 transition-all duration-300 hover:scale-110"
                            >
                                <LinkedinIcon className="w-8 h-8 text-white" stroke="currentColor" strokeWidth={2} fill="none" />
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    );
});

Contact.displayName = 'Contact';

export default Contact;
</file>

<file path="src/components/Projects.js">
import React, { forwardRef } from 'react';
import { projects } from '../data/portfolioData';

const Projects = forwardRef((props, ref) => {
    return (
        <section ref={ref} id="projects" className="py-12 px-6 vaporwave-section">
            <div className="container mx-auto max-w-6xl">
                <h2 className="text-5xl font-bold text-center mb-12 relative inline-block w-full scroll-animate animate-up">
          <span className="relative z-10 bg-gradient-to-r from-purple-400 to-cyan-400 text-transparent bg-clip-text">
            [ Projects ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-purple-500/30 glitch-header-1">
            [ Projects ]
          </span>
                </h2>
                <div className="grid md:grid-cols-3 gap-6 mb-12">
                    {projects.map((project, index) => (
                        <div
                            key={index}
                            className="bg-black/30 backdrop-blur-md rounded-xl p-6 border border-pink-500/30 hover:border-cyan-500/50 transition-all duration-300 hover:transform hover:scale-105 hover:shadow-2xl hover:shadow-pink-500/30 scroll-animate animate-up"
                            style={{ animationDelay: `${index * 0.1}s` }}
                        >
                            <h3 className="text-2xl font-bold mb-3 text-cyan-300">{project.title}</h3>
                            <p className="text-gray-300 mb-4">{project.description}</p>
                            <div className="flex flex-wrap gap-2 mb-6">
                                {project.tech.map((tech) => (
                                    <span key={tech} className="px-3 py-1 bg-purple-500/20 rounded-full text-sm text-purple-300">
                    {tech}
                  </span>
                                ))}
                            </div>
                            <div className="flex space-x-4">
                                <a
                                    href={project.demo}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    className="flex-1 text-center py-2 bg-gradient-to-r from-pink-500 to-purple-500 rounded-lg hover:from-pink-600 hover:to-purple-600 transition-all duration-300"
                                >
                                    Demo
                                </a>
                                <a
                                    href={project.code}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    className="flex-1 text-center py-2 bg-gradient-to-r from-cyan-500 to-blue-500 rounded-lg hover:from-cyan-600 hover:to-blue-600 transition-all duration-300"
                                >
                                    Code
                                </a>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </section>
    );
});

Projects.displayName = 'Projects';

export default Projects;
</file>

<file path="src/styles/animations.css">
/* Glitch Animations */
.glitch-1 {
    animation: glitch 2s infinite;
    clip-path: inset(0 0 0 0);
}

.glitch-2 {
    animation: glitch2 2.5s infinite;
    clip-path: inset(0 0 0 0);
}

@keyframes glitch {
    0%, 100% {
        transform: translate(0);
        clip-path: inset(0 0 0 0);
    }
    20% {
        transform: translate(-2px, 2px);
        clip-path: inset(20% 0 30% 0);
    }
    40% {
        transform: translate(-2px, -2px);
        clip-path: inset(50% 0 20% 0);
    }
    60% {
        transform: translate(2px, 2px);
        clip-path: inset(10% 0 60% 0);
    }
    80% {
        transform: translate(2px, -2px);
        clip-path: inset(40% 0 10% 0);
    }
}

@keyframes glitch2 {
    0%, 100% {
        transform: translate(0);
        clip-path: inset(0 0 0 0);
    }
    20% {
        transform: translate(2px, -2px);
        clip-path: inset(60% 0 10% 0);
    }
    40% {
        transform: translate(-2px, 2px);
        clip-path: inset(20% 0 50% 0);
    }
    60% {
        transform: translate(2px, 2px);
        clip-path: inset(30% 0 40% 0);
    }
    80% {
        transform: translate(-2px, -2px);
        clip-path: inset(10% 0 70% 0);
    }
}

/* Header Glitch Animations */
.glitch-header-1 {
    animation: glitchHeader 3s infinite;
    top: 0;
    left: 50%;
    position: absolute;
    transform: translateX(-50%);
    width: 100%;
    text-align: center;
}

.glitch-header-2 {
    animation: glitchHeader2 2.5s infinite;
    top: 0;
    left: 50%;
    position: absolute;
    transform: translateX(-50%);
    width: 100%;
    text-align: center;
}

@keyframes glitchHeader {
    0%, 100% {
        transform: translateX(-50%);
        opacity: 0.3;
    }
    10% {
        transform: translateX(-50%) skew(-5deg);
        opacity: 0.5;
    }
    20% {
        transform: translateX(-50%);
        opacity: 0.3;
    }
    30% {
        transform: translateX(-50%) skew(5deg);
        opacity: 0.5;
    }
    40% {
        transform: translateX(-50%);
        opacity: 0.3;
    }
    50% {
        transform: translateX(-50%) scaleX(1.1);
        opacity: 0.6;
    }
    60% {
        transform: translateX(-50%);
        opacity: 0.3;
    }
    70% {
        transform: translateX(-50%) skew(-3deg);
        opacity: 0.5;
    }
    80% {
        transform: translateX(-50%);
        opacity: 0.3;
    }
    90% {
        transform: translateX(-50%) scaleY(1.05);
        opacity: 0.4;
    }
}

@keyframes glitchHeader2 {
    0%, 100% {
        transform: translateX(-50%) translateY(0);
        opacity: 0.3;
    }
    15% {
        transform: translateX(-50%) translateY(-2px);
        opacity: 0.5;
    }
    30% {
        transform: translateX(-50%) translateY(1px);
        opacity: 0.4;
    }
    45% {
        transform: translateX(-50%) translateY(-1px) skew(2deg);
        opacity: 0.6;
    }
    60% {
        transform: translateX(-50%) translateY(2px);
        opacity: 0.3;
    }
    75% {
        transform: translateX(-50%) translateY(-2px) skew(-2deg);
        opacity: 0.5;
    }
}

/* Responsive styles for glitch effect */
@media (max-width: 768px) {
    .glitch-header-1,
    .glitch-header-2 {
        width: 100%;
        text-align: center;
    }
}

/* Skill Bar Animation */
.skill-bar {
    animation: slideIn 1s ease-out both;
}

@keyframes slideIn {
    from { width: 0; }
    to { width: var(--width); }
}

/* Bounce Animation dla strzałki przewijania */
@keyframes arrowBounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-15px);
  }
  60% {
    transform: translateY(-7px);
  }
}

.bounce-arrow {
  animation: arrowBounce 2s infinite;
}

/* Pulse Glow dla strzałki */
@keyframes arrowGlow {
  0% {
    filter: drop-shadow(0 0 3px rgba(1, 205, 254, 0.5));
  }
  50% {
    filter: drop-shadow(0 0 8px rgba(255, 113, 206, 0.8));
  }
  100% {
    filter: drop-shadow(0 0 3px rgba(1, 205, 254, 0.5));
  }
}

.glow-arrow {
  animation: arrowGlow 2s infinite alternate;
}

/* Kombinacja animacji dla strzałki */
.animated-arrow {
  animation: arrowBounce 2s infinite, arrowGlow 2s infinite alternate;
}

/* Blinking Cursor Animation */
@keyframes blink {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

.animate-blink {
  animation: blink 1s step-end infinite;
}
</file>

<file path="src/App.js">
import React, { useState, useEffect, useRef } from 'react';
import Navigation from './components/Navigation';
import Home from './components/Home';
import About from './components/About';
import Skills from './components/Skills';
import Projects from './components/Projects';
import Experience from './components/Experience';
import Education from './components/Education';
import Contact from './components/Contact';
import Footer from './components/Footer';

const App = () => {
    const [activeSection, setActiveSection] = useState('home');
    const sectionRefs = useRef({});
    // Offset dla nawigacji, aby tytuły sekcji nie były zasłonięte
    const navOffset = 80; // Przybliżona wysokość navbara plus dodatkowy margines

    useEffect(() => {
        const handleScroll = () => {
            // Obsługa aktywnej sekcji dla nawigacji
            const scrollPosition = window.scrollY + navOffset + 20; // Dodano offset dla dokładniejszej detekcji aktywnej sekcji

            Object.entries(sectionRefs.current).forEach(([section, ref]) => {
                if (ref && ref.offsetTop <= scrollPosition && ref.offsetTop + ref.offsetHeight > scrollPosition) {
                    setActiveSection(section);
                }
            });

            // Obsługa animacji przewijania
            const isElementInViewport = (el) => {
                if (!el) return false;
                const rect = el.getBoundingClientRect();
                const windowHeight = window.innerHeight || document.documentElement.clientHeight;
                const topVisible = rect.top <= windowHeight * 0.75;
                const bottomVisible = rect.bottom >= 0;
                return topVisible && bottomVisible;
            };

            // Animacje dla elementów z klasą .scroll-animate
            const animatedElements = document.querySelectorAll('.scroll-animate');
            animatedElements.forEach((el) => {
                if (isElementInViewport(el) && !el.classList.contains('animated')) {
                    if (el.classList.contains('animate-up')) {
                        el.classList.add('fade-in-up');
                    } else if (el.classList.contains('animate-left')) {
                        el.classList.add('fade-in-left');
                    } else if (el.classList.contains('animate-right')) {
                        el.classList.add('fade-in-right');
                    }
                    el.classList.add('animated');
                }
            });

            // Aktywacja efektu neonowego dla sekcji w viewport
            const sections = document.querySelectorAll('.vaporwave-section');
            sections.forEach((section) => {
                if (isElementInViewport(section)) {
                    section.classList.add('active-section');
                } else {
                    section.classList.remove('active-section');
                }
            });
        };

        window.addEventListener('scroll', handleScroll);
        // Wywołanie na początku, aby sprawdzić elementy już widoczne
        handleScroll();

        return () => window.removeEventListener('scroll', handleScroll);
    }, []);

    const scrollToSection = (sectionId) => {
        if (sectionRefs.current[sectionId]) {
            const section = sectionRefs.current[sectionId];
            const sectionTop = section.getBoundingClientRect().top + window.pageYOffset;

            // Przewijamy do sekcji z uwzględnieniem offsetu nawigacji
            window.scrollTo({
                top: sectionTop - navOffset,
                behavior: 'smooth'
            });
        }
    };

    return (
        <div className="min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-indigo-900 text-white overflow-x-hidden">
            {/* Grid Overlay */}
            <div className="fixed inset-0 pointer-events-none opacity-20">
                <div className="absolute inset-0 grid-background"></div>
            </div>

            <Navigation activeSection={activeSection} scrollToSection={scrollToSection} />

            <Home ref={el => sectionRefs.current['home'] = el} />
            <About ref={el => sectionRefs.current['about'] = el} />
            <Skills ref={el => sectionRefs.current['skills'] = el} />
            <Projects ref={el => sectionRefs.current['projects'] = el} />
            <Experience ref={el => sectionRefs.current['experience'] = el} />
            <Education ref={el => sectionRefs.current['education'] = el} />
            <Contact ref={el => sectionRefs.current['contact'] = el} />

            <Footer />
        </div>
    );
};

export default App;
</file>

<file path="src/components/Education.js">
import React, { forwardRef } from 'react';

const Education = forwardRef((props, ref) => {
    return (
        <section ref={ref} id="education" className="py-12 px-6 vaporwave-section">
            <div className="container mx-auto max-w-4xl">
                <h2 className="text-5xl font-bold text-center mb-12 relative inline-block w-full scroll-animate animate-up">
          <span className="relative z-10 bg-gradient-to-r from-cyan-400 to-purple-400 text-transparent bg-clip-text">
            [ Education ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-cyan-500/30 glitch-header-1">
            [ Education ]
          </span>
                </h2>

                <div className="space-y-8 mb-12">
                    <div className="bg-black/30 backdrop-blur-md rounded-xl p-8 border-l-4 border-purple-500 scroll-animate animate-left">
                        <h3 className="text-2xl font-bold text-pink-300 mb-2">Master's in Computer Science</h3>
                        <p className="text-cyan-300 mb-2">Technical University of Excellence</p>
                        <p className="text-purple-300 mb-4">2020 - 2022</p>
                        <div className="mt-4 p-4 bg-gradient-to-r from-pink-500/10 to-cyan-500/10 rounded-lg">
                            <p className="text-gray-300 mb-2">Specialization: Advanced Web Technologies & AI Integration</p>
                            <ul className="space-y-1 text-gray-300">
                                <li>• Thesis: "Optimization Techniques for Modern JavaScript Frameworks"</li>
                                <li>• GPA: 3.92/4.0</li>
                                <li>• Participated in International Web Development Competition (2nd place)</li>
                                <li>• Research assistant in Human-Computer Interaction lab</li>
                            </ul>
                        </div>
                        <div className="mt-4 p-4 bg-gradient-to-r from-cyan-500/10 to-purple-500/10 rounded-lg">
                            <p className="text-gray-300">Key courses: Advanced Algorithm Design, Cloud Computing Architecture, Machine Learning for Web Applications, User Experience Research Methods</p>
                        </div>
                    </div>

                    <div className="bg-black/30 backdrop-blur-md rounded-xl p-8 border-l-4 border-cyan-500 scroll-animate animate-right">
                        <h3 className="text-2xl font-bold text-pink-300 mb-2">Bachelor's in Computer Science</h3>
                        <p className="text-cyan-300 mb-2">National University of Technology</p>
                        <p className="text-purple-300 mb-4">2016 - 2020</p>
                        <div className="mt-4 p-4 bg-gradient-to-r from-pink-500/10 to-cyan-500/10 rounded-lg">
                            <p className="text-gray-300 mb-2">Specialization: Web Systems and Mobile Applications</p>
                            <ul className="space-y-1 text-gray-300">
                                <li>• Final Project: "Responsive E-commerce Platform with React and Node.js"</li>
                                <li>• GPA: 3.85/4.0</li>
                                <li>• Dean's List: 7 consecutive semesters</li>
                                <li>• Member of Web Development Student Society</li>
                            </ul>
                        </div>
                        <div className="mt-4 p-4 bg-gradient-to-r from-cyan-500/10 to-purple-500/10 rounded-lg">
                            <p className="text-gray-300">Key courses: Data Structures & Algorithms, Web Programming, Database Systems, UI/UX Design Fundamentals</p>
                        </div>
                    </div>

                    <div className="bg-black/30 backdrop-blur-md rounded-xl p-8 border-l-4 border-pink-500 scroll-animate animate-left">
                        <h3 className="text-2xl font-bold text-cyan-300 mb-2">Professional Certification</h3>
                        <p className="text-pink-300 mb-2">Advanced Front-end Development</p>
                        <p className="text-purple-300 mb-4">2019</p>
                        <div className="mt-4 p-4 bg-gradient-to-r from-purple-500/10 to-pink-500/10 rounded-lg">
                            <p className="text-gray-300 mb-2">Tech Academy International</p>
                            <ul className="space-y-1 text-gray-300">
                                <li>• Specialized in React ecosystem and modern JavaScript</li>
                                <li>• Completed 5 real-world projects with industry mentors</li>
                                <li>• Received Excellence Award for final capstone project</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    );
});

Education.displayName = 'Education';

export default Education;
</file>

<file path="src/components/Experience.js">
import React, { forwardRef } from 'react';

const Experience = forwardRef((props, ref) => {
    return (
        <section ref={ref} id="experience" className="py-12 px-6 vaporwave-section">
            <div className="container mx-auto max-w-4xl">
                <h2 className="text-5xl font-bold text-center mb-12 relative inline-block w-full scroll-animate animate-up">
          <span className="relative z-10 bg-gradient-to-r from-pink-400 to-purple-400 text-transparent bg-clip-text">
            [ Experience ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-pink-500/30 glitch-header-2">
            [ Experience ]
          </span>
                </h2>
                <div className="space-y-8 mb-12">
                    <div className="bg-black/30 backdrop-blur-md rounded-xl p-8 border-l-4 border-pink-500 hover:border-cyan-500 transition-all duration-300 scroll-animate animate-left">
                        <div className="flex justify-between items-start mb-4">
                            <div>
                                <h3 className="text-2xl font-bold text-cyan-300">Senior Front-end Developer</h3>
                                <p className="text-purple-300">TechInnovate Solutions</p>
                            </div>
                            <span className="px-4 py-2 bg-pink-500/20 rounded-full text-pink-300">2023 - Present</span>
                        </div>
                        <ul className="space-y-2 text-gray-300">
                            <li>• Led development of a high-traffic e-commerce platform using React, Redux, and Next.js</li>
                            <li>• Implemented advanced animations and interactive UI components that improved user engagement by 45%</li>
                            <li>• Optimized website performance, achieving a 30% reduction in load time and 90+ PageSpeed score</li>
                            <li>• Mentored junior developers and conducted code reviews to maintain code quality standards</li>
                            <li>• Collaborated with UX/UI designers to implement pixel-perfect interfaces and responsive designs</li>
                        </ul>
                    </div>

                    <div className="bg-black/30 backdrop-blur-md rounded-xl p-8 border-l-4 border-cyan-500 scroll-animate animate-right">
                        <div className="flex justify-between items-start mb-4">
                            <div>
                                <h3 className="text-2xl font-bold text-pink-300">Front-end Developer</h3>
                                <p className="text-cyan-300">Digital Creatives Agency</p>
                            </div>
                            <span className="px-4 py-2 bg-cyan-500/20 rounded-full text-cyan-300">2020 - 2023</span>
                        </div>
                        <ul className="space-y-2 text-gray-300">
                            <li>• Developed responsive web applications using React, TypeScript, and Tailwind CSS</li>
                            <li>• Created and maintained component libraries that improved development efficiency by 35%</li>
                            <li>• Integrated RESTful APIs and GraphQL endpoints for seamless data management</li>
                            <li>• Worked in Agile teams to deliver projects for clients across various industries</li>
                            <li>• Implemented automated testing with Jest and React Testing Library</li>
                        </ul>
                    </div>

                    <div className="bg-black/30 backdrop-blur-md rounded-xl p-8 border-l-4 border-purple-500 scroll-animate animate-left">
                        <div className="flex justify-between items-start mb-4">
                            <div>
                                <h3 className="text-2xl font-bold text-cyan-300">Junior Web Developer</h3>
                                <p className="text-purple-300">WebSphere Studios</p>
                            </div>
                            <span className="px-4 py-2 bg-purple-500/20 rounded-full text-purple-300">2018 - 2020</span>
                        </div>
                        <ul className="space-y-2 text-gray-300">
                            <li>• Built and maintained client websites using JavaScript, HTML5, and CSS3</li>
                            <li>• Assisted in migrating legacy applications to modern frameworks like React</li>
                            <li>• Participated in daily stand-ups and sprint planning meetings</li>
                            <li>• Collaborated with back-end developers to integrate front-end components with API endpoints</li>
                            <li>• Gained experience in version control using Git and project management tools</li>
                        </ul>
                    </div>
                </div>
            </div>
        </section>
    );
});

Experience.displayName = 'Experience';

export default Experience;
</file>

<file path="src/components/Skills.js">
import React, { forwardRef } from 'react';
import { skills } from '../data/portfolioData';
import * as LucideIcons from 'lucide-react';

const Skills = forwardRef((props, ref) => {
    // Funkcja mapująca poziom procentowy na tekstowy opis
    const getLevelDescription = (level) => {
        if (level >= 90) return "Ekspert";
        if (level >= 80) return "Zaawansowany";
        if (level >= 70) return "Średniozaawansowany";
        if (level >= 50) return "Podstawowy";
        return "Początkujący";
    };

    return (
        <section ref={ref} id="skills" className="py-12 px-6 vaporwave-section">
            <div className="container mx-auto max-w-4xl">
                <h2 className="text-5xl font-bold text-center mb-12 relative inline-block w-full scroll-animate animate-up">
          <span className="relative z-10 bg-gradient-to-r from-cyan-400 to-pink-400 text-transparent bg-clip-text">
            [ Skills ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-cyan-500/30 glitch-header-2">
            [ Skills ]
          </span>
                </h2>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
                    {skills.map((skill, index) => {
                        const Icon = LucideIcons[skill.icon];
                        return (
                            <div
                                key={skill.name}
                                className="bg-black/30 backdrop-blur-md rounded-lg p-6 border border-purple-500/30 scroll-animate animate-left flex flex-col items-center text-center hover:border-cyan-400 transition-all duration-300 hover:transform hover:scale-105"
                                style={{ animationDelay: `${index * 0.1}s` }}
                            >
                                <div className="mb-4 bg-gradient-to-r from-pink-500/30 to-cyan-500/30 p-5 rounded-full">
                                    {Icon && <Icon className="text-cyan-300 w-12 h-12" />}
                                </div>
                                <h3 className="text-xl font-mono text-cyan-300 mb-2">{skill.name}</h3>
                                <span className="text-pink-400 text-sm font-medium">{getLevelDescription(skill.level)}</span>
                            </div>
                        );
                    })}
                </div>
            </div>
        </section>
    );
});

Skills.displayName = 'Skills';

export default Skills;
</file>

<file path="src/components/About.js">
import React, { forwardRef } from 'react';
import { Coffee, Network, Webhook, Puzzle, Lightbulb, Users, Rocket, BookOpen } from 'lucide-react';

const About = forwardRef((props, ref) => {
    return (
        <section ref={ref} id="about" className="py-12 px-6 vaporwave-section">
            <div className="container mx-auto max-w-4xl">
                <h2 className="text-5xl font-bold text-center mb-12 relative inline-block w-full scroll-animate animate-up">
          <span className="relative z-10 bg-gradient-to-r from-pink-400 to-cyan-400 text-transparent bg-clip-text">
            [ About Me ]
          </span>
                    <span className="absolute left-1/2 transform -translate-x-1/2 text-pink-500/30 glitch-header-1">
            [ About Me ]
          </span>
                </h2>

                <div className="bg-black/30 backdrop-blur-md rounded-2xl p-8 border border-cyan-500/30 shadow-2xl shadow-pink-500/20 scroll-animate animate-up mb-12">
                    <p className="text-xl leading-relaxed mb-6 text-cyan-100 scroll-animate animate-left bg-gradient-to-r from-pink-500/10 to-cyan-500/10 p-4 rounded-lg border border-cyan-400/20 text-center">
                        I'm a versatile <span className="text-indigo-300 font-semibold">Software Developer</span> with solid experience who believes that the best code is the one that solves real problems for real people.
                    </p>

                    <div className="h-px bg-gradient-to-r from-transparent via-cyan-500/30 to-transparent my-6"></div>

                    <p className="text-lg leading-relaxed mb-6 text-cyan-100 scroll-animate animate-right">
                        My programming journey started with curiosity, but quickly evolved into a professional career path. Over the years, I've developed skills in <strong className="text-indigo-300">backend and frontend development</strong>, <strong className="text-indigo-300">system integration</strong>, and <strong className="text-indigo-300">project ownership</strong>. I'm fascinated by the entire software lifecycle - from <strong className="text-indigo-300">requirements analysis</strong> and architecture design to <strong className="text-indigo-300">delivering high-quality solutions</strong>.
                    </p>

                    <div className="h-px bg-gradient-to-r from-transparent via-pink-500/30 to-transparent my-6"></div>

                    <p className="text-lg leading-relaxed mb-6 text-cyan-100 scroll-animate animate-left">
                        As someone who combines technical skills with <strong className="text-indigo-300">strong team collaboration</strong>, I love those moments when all the puzzle pieces suddenly fit together - when technical implementation perfectly aligns with business goals and user needs. My experience as a <strong className="text-indigo-300">Product Owner/Developer</strong> gives me a unique perspective that bridges business vision and technical execution, allowing me to build solutions that truly matter.
                    </p>

                    <div className="h-px bg-gradient-to-r from-transparent via-cyan-500/30 to-transparent my-6"></div>

                    <p className="text-lg leading-relaxed mb-6 text-cyan-100 scroll-animate animate-right">
                        I'm a strong advocate for <strong className="text-indigo-300">continuous learning</strong> - technology evolves so rapidly that every day is an opportunity to learn something new. Currently, I'm deepening my knowledge in software architecture and cloud technologies, because I believe the future belongs to <strong className="text-indigo-300">scalable, efficient systems</strong>.
                    </p>

                    <div className="h-px bg-gradient-to-r from-transparent via-pink-500/30 to-transparent my-6"></div>

                    <p className="text-lg leading-relaxed text-cyan-100 scroll-animate animate-left text-center">
                        I'm looking for opportunities where I can leverage my versatility and passion for building innovative technological solutions that make a real impact.
                    </p>
                    <div className="grid grid-cols-2 sm:grid-cols-4 gap-4 mt-8">
                        <div className="bg-gradient-to-br from-pink-500/20 to-purple-500/20 p-4 rounded-lg text-center scroll-animate animate-up flex flex-col items-center justify-center h-32">
                            <div className="flex items-center justify-center w-full">
                                <Coffee className="w-10 h-10 text-pink-400" />
                            </div>
                            <p className="text-sm mt-3 font-medium">Java & Fullstack Craft</p>
                        </div>
                        <div className="bg-gradient-to-br from-cyan-500/20 to-blue-500/20 p-4 rounded-lg text-center scroll-animate animate-up flex flex-col items-center justify-center h-32">
                            <div className="flex items-center justify-center w-full">
                                <Network className="w-10 h-10 text-cyan-400" />
                            </div>
                            <p className="text-sm mt-3 font-medium">Scalable Architectures</p>
                        </div>
                        <div className="bg-gradient-to-br from-purple-500/20 to-pink-500/20 p-4 rounded-lg text-center scroll-animate animate-up flex flex-col items-center justify-center h-32">
                            <div className="flex items-center justify-center w-full">
                                <Webhook className="w-10 h-10 text-purple-400" />
                            </div>
                            <p className="text-sm mt-3 font-medium">API Design & Integration</p>
                        </div>
                        <div className="bg-gradient-to-br from-blue-500/20 to-cyan-500/20 p-4 rounded-lg text-center scroll-animate animate-up flex flex-col items-center justify-center h-32">
                            <div className="flex items-center justify-center w-full">
                                <Puzzle className="w-10 h-10 text-blue-400" />
                            </div>
                            <p className="text-sm mt-3 font-medium">Solution-Driven Development</p>
                        </div>
                        <div className="bg-gradient-to-br from-green-500/20 to-teal-500/20 p-4 rounded-lg text-center scroll-animate animate-up flex flex-col items-center justify-center h-32">
                            <div className="flex items-center justify-center w-full">
                                <Lightbulb className="w-10 h-10 text-green-400" />
                            </div>
                            <p className="text-sm mt-3 font-medium">Problem Solver</p>
                        </div>
                        <div className="bg-gradient-to-br from-red-500/20 to-orange-500/20 p-4 rounded-lg text-center scroll-animate animate-up flex flex-col items-center justify-center h-32">
                            <div className="flex items-center justify-center w-full">
                                <Users className="w-10 h-10 text-red-400" />
                            </div>
                            <p className="text-sm mt-3 font-medium">Collaborative Spirit</p>
                        </div>
                        <div className="bg-gradient-to-br from-yellow-500/20 to-amber-500/20 p-4 rounded-lg text-center scroll-animate animate-up flex flex-col items-center justify-center h-32">
                            <div className="flex items-center justify-center w-full">
                                <Rocket className="w-10 h-10 text-yellow-400" />
                            </div>
                            <p className="text-sm mt-3 font-medium">Proactive Initiative</p>
                        </div>
                        <div className="bg-gradient-to-br from-indigo-500/20 to-purple-500/20 p-4 rounded-lg text-center scroll-animate animate-up flex flex-col items-center justify-center h-32">
                            <div className="flex items-center justify-center w-full">
                                <BookOpen className="w-10 h-10 text-indigo-400" />
                            </div>
                            <p className="text-sm mt-3 font-medium">Continuous Growth</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    );
});

About.displayName = 'About';

export default About;
</file>

<file path="src/components/Home.js">
import React, { forwardRef } from 'react';
import { ChevronDown, Mail, Github, Linkedin } from 'lucide-react';
import TypewriterEffect from './TypewriterEffect';

const Home = forwardRef((props, ref) => {
    const glitchText = 'Krzysztof Przybysz';
    const navOffset = 80; // Taki sam offset jak w App.js

    // Lista ról do wyświetlenia w animacji TypewriterEffect
    const rolesList = [
        "Software Developer",
        "Product Owner",
        "Backend Developer",
        "Full-stack Developer",
        "Problem Solver",
        "Solution Builder",
        "Team Collaborator",
        "Technology Enthusiast"
    ];

    const handleScrollDown = () => {
        // Znajdź następną sekcję (prawdopodobnie About) i przewiń do niej
        const aboutSection = document.getElementById('about');
        if (aboutSection) {
            const sectionTop = aboutSection.getBoundingClientRect().top + window.pageYOffset;
            window.scrollTo({
                top: sectionTop - navOffset,
                behavior: 'smooth'
            });
        }
    };

    return (
        <section ref={ref} id="home" className="min-h-screen flex md:items-center items-start pt-[20vh] md:pt-0 justify-center relative vaporwave-section">
            <div className="text-center z-10">
                <h1 className="text-6xl md:text-8xl font-bold mb-6 relative inline-block scroll-animate animate-up">
          <span className="relative z-10 bg-gradient-to-r from-pink-400 via-purple-400 to-cyan-400 text-transparent bg-clip-text">
            {glitchText}
          </span>
                    <span className="absolute inset-0 text-pink-500 opacity-50 glitch-1">
            {glitchText}
          </span>
                    <span className="absolute inset-0 text-cyan-500 opacity-50 glitch-2">
            {glitchText}
          </span>
                </h1>

                {/* Element z powitaniem i efektem TypewriterEffect */}
                <p className="text-xl md:text-2xl text-white mb-12 font-mono scroll-animate animate-left">
                    Hi there,<br className="block md:hidden" /> I'm <TypewriterEffect phrases={rolesList} typingSpeed={80} deletingSpeed={40} pauseTime={1500} />
                </p>

                <div className="flex justify-center space-x-4 mb-12 scroll-animate animate-up">
                    <a
                        href="https://github.com"
                        target="_blank"
                        rel="noopener noreferrer"
                        className="p-3 bg-pink-500/20 rounded-full hover:bg-pink-500/40 transition-all duration-300 hover:scale-110"
                    >
                        <Github className="w-6 h-6" />
                    </a>
                    <a
                        href="https://linkedin.com"
                        target="_blank"
                        rel="noopener noreferrer"
                        className="p-3 bg-cyan-500/20 rounded-full hover:bg-cyan-500/40 transition-all duration-300 hover:scale-110"
                    >
                        <Linkedin className="w-6 h-6" />
                    </a>
                    <a
                        href="mailto:hello@example.com"
                        className="p-3 bg-purple-500/20 rounded-full hover:bg-purple-500/40 transition-all duration-300 hover:scale-110"
                    >
                        <Mail className="w-6 h-6" />
                    </a>
                </div>
                <div className="flex justify-center w-full">
                    <button
                        onClick={handleScrollDown}
                        className="cursor-pointer p-3 bg-gradient-to-r from-pink-500/30 to-cyan-500/30 rounded-full hover:from-pink-500/50 hover:to-cyan-500/50 transition-all duration-500 hover:scale-110 group flex items-center justify-center scroll-animate animate-up mt-4"
                        aria-label="Przewiń w dół"
                    >
                        <ChevronDown className="w-8 h-8 text-cyan-400 group-hover:text-pink-300 transition-colors duration-300 animated-arrow" />
                    </button>
                </div>
            </div>

            {/* Animated Background Elements */}
            <div className="absolute inset-0 overflow-hidden">
                <div className="absolute top-20 left-10 w-72 h-72 bg-pink-500/20 rounded-full blur-3xl animate-pulse"></div>
                <div className="absolute bottom-20 right-10 w-96 h-96 bg-cyan-500/20 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '1s' }}></div>
                <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-80 h-80 bg-purple-500/20 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '2s' }}></div>
            </div>
        </section>
    );
});

Home.displayName = 'Home';

export default Home;
</file>

</files>
